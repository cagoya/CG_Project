#include "outside/wall.h" 
#include <glad/gl.h>
#include <iostream>

Wall::Wall() : DrawObject()
{
    outer_.getVertices() = {
		// --- 原有顶点 0-29 ---
		// 背面 (Back Face) - Z = -0.5f, Normal: (0.0f, 0.0f, -1.0f)
		// 左下
		-0.5f, 0.0f, -0.5f,    0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		// 右下
		0.5f, 0.0f, -0.5f,    0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.5f,
		// 右上
		0.5f, 0.5f, -0.5f,    0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f,
		// 左上
		-0.5f, 0.5f, -0.5f,    0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 1.0f,

		// 正面基础顶点 (Front Base Face) - Z = 0.5f, Normal: (0.0f, 0.0f, 1.0f)
		// V4 左下
		-0.5f, 0.0f, 0.5f,     0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
		// V5 右下
		0.5f, 0.0f, 0.5f,     0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.0f,
		// V6 右上
		0.5f, 0.5f, 0.5f,     0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		// V7 左上
		-0.5f, 0.5f, 0.5f,     0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.5f,

		// 左面 (Left Face) - X = -0.5f, Normal: (-1.0f, 0.0f, 0.0f)
		-0.5f, 0.5f, 0.5f,     -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		-0.5f, 0.5f, -0.5f,    -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.5f,
		-0.5f, 0.0f, -0.5f,    -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f,
		-0.5f, 0.0f, 0.5f,     -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 1.0f,

		// 右面 (Right Face) - X = 0.5f, Normal: (1.0f, 0.0f, 0.0f)
		0.5f, 0.5f, 0.5f,      1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.5f,
		0.5f, 0.5f, -0.5f,     1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		0.5f, 0.0f, -0.5f,     1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 1.0f,
		0.5f, 0.0f, 0.5f,      1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f,

		// 屋顶前面三角形 (Front Roof Triangle) - Normal calculated for a common plane
		-0.5f, 0.5f, 0.5f,     0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		0.5f, 0.5f, 0.5f,     0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		0.0f, 0.625f, 0.5f,   0.0f, 0.0f, 1.0f,    1.0f, 1.0f, 1.0f,   0.5f, 0.625f,

		// 屋顶后面三角形 (Back Roof Triangle) - Normal: (0.0f, 0.0f, -1.0f)
		-0.5f, 0.5f, -0.5f,    0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		0.5f, 0.5f, -0.5f,    0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		0.0f, 0.625f, -0.5f,  0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.625f,

		// 顶面 (Top Face) - This refers to the horizontal part, Y = 0.5f, Normal: (0.0f, 1.0f, 0.0f)
		-0.5f, 0.5f, -0.5f,    0.0f, 1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
		0.5f, 0.5f, -0.5f,    0.0f, 1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.0f,
		0.5f, 0.5f, 0.5f,     0.0f, 1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   1.0f, 1.0f,
		-0.5f, 0.5f, 0.5f,     0.0f, 1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   0.0f, 1.0f,

		// 右面小矩形 (Right Small Rectangle) - X = 0.5f, Normal: (1.0f, 0.0f, 0.0f)
		// This looks like a window or feature on the right side.
		0.5f, 0.175f, -0.15f,  1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
		0.5f, 0.175f, 0.15f,   1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.3f, 0.0f,
		0.5f, 0.325f, 0.15f,   1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.3f, 0.3f,
		0.5f, 0.325f, -0.15f,  1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.3f,

		// --- 新增顶点 (New Vertices 30-35) ---
		// 这些点都在 Z = 0.5f 的平面上，属于正面，所以法向量是 (0.0f, 0.0f, 1.0f)
		/*30 Hole_LB*/ -0.1f, 0.0f, 0.5f,   0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.4f, 0.0f,
		/*31 Hole_RB*/  0.1f, 0.0f, 0.5f,   0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.6f, 0.0f,
		/*32 Hole_RT*/  0.1f, 0.3f, 0.5f,   0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.6f, 0.3f,
		/*33 Hole_LT*/ -0.1f, 0.3f, 0.5f,   0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.4f, 0.3f,
		/*34 Aux_L*/   -0.5f, 0.3f, 0.5f,   0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.3f,
		/*35 Aux_R*/    0.5f, 0.3f, 0.5f,   0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.3f
    };

	inner_.getVertices() = {
		// --- 原有顶点 0-29 ---
		// 背面 (Back Face) - Z = -0.5f, Normal: (0.0f, 0.0f, -1.0f)
		// 左下
		-0.5f, 0.0f, -0.5f,    0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		// 右下
		0.5f, 0.0f, -0.5f,    0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.5f,
		// 右上
		0.5f, 0.5f, -0.5f,    0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f,
		// 左上
		-0.5f, 0.5f, -0.5f,    0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 1.0f,

		// 正面基础顶点 (Front Base Face) - Z = 0.5f, Normal: (0.0f, 0.0f, 1.0f)
		// V4 左下
		-0.5f, 0.0f, 0.5f,     0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
		// V5 右下
		0.5f, 0.0f, 0.5f,     0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.0f,
		// V6 右上
		0.5f, 0.5f, 0.5f,     0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		// V7 左上
		-0.5f, 0.5f, 0.5f,     0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.5f,

		// 左面 (Left Face) - X = -0.5f, Normal: (-1.0f, 0.0f, 0.0f)
		-0.5f, 0.5f, 0.5f,     1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		-0.5f, 0.5f, -0.5f,    1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.5f,
		-0.5f, 0.0f, -0.5f,    1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f,
		-0.5f, 0.0f, 0.5f,     1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 1.0f,

		// 右面 (Right Face) - X = 0.5f, Normal: (1.0f, 0.0f, 0.0f)
		0.5f, 0.5f, 0.5f,      -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.5f,
		0.5f, 0.5f, -0.5f,     -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		0.5f, 0.0f, -0.5f,     -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 1.0f,
		0.5f, 0.0f, 0.5f,      -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f,

		// 屋顶前面三角形 (Front Roof Triangle) - Normal calculated for a common plane
		-0.5f, 0.5f, 0.5f,     0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		0.5f, 0.5f, 0.5f,     0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		0.0f, 0.625f, 0.5f,   0.0f, 0.0f, -1.0f,    1.0f, 1.0f, 1.0f,   0.5f, 0.625f,

		// 屋顶后面三角形 (Back Roof Triangle) - Normal: (0.0f, 0.0f, -1.0f)
		-0.5f, 0.5f, -0.5f,    0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.5f,
		0.5f, 0.5f, -0.5f,    0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.5f,
		0.0f, 0.625f, -0.5f,  0.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.5f, 0.625f,

		// 顶面 (Top Face) - This refers to the horizontal part, Y = 0.5f, Normal: (0.0f, 1.0f, 0.0f)
		-0.5f, 0.5f, -0.5f,    0.0f, -1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
		0.5f, 0.5f, -0.5f,    0.0f, -1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   1.0f, 0.0f,
		0.5f, 0.5f, 0.5f,     0.0f, -1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   1.0f, 1.0f,
		-0.5f, 0.5f, 0.5f,     0.0f, -1.0f, 0.0f,    1.0f, 1.0f, 1.0f,   0.0f, 1.0f,

		// 右面小矩形 (Right Small Rectangle) - X = 0.5f, Normal: (1.0f, 0.0f, 0.0f)
		// This looks like a window or feature on the right side.
		0.5f, 0.175f, -0.15f,  -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
		0.5f, 0.175f, 0.15f,   -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.3f, 0.0f,
		0.5f, 0.325f, 0.15f,   -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.3f, 0.3f,
		0.5f, 0.325f, -0.15f,  -1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.3f,

		// --- 新增顶点 (New Vertices 30-35) ---
		// 这些点都在 Z = 0.5f 的平面上，属于正面，所以法向量是 (0.0f, 0.0f, 1.0f)
		/*30 Hole_LB*/ -0.1f, 0.0f, 0.5f,   0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.4f, 0.0f,
		/*31 Hole_RB*/  0.1f, 0.0f, 0.5f,   0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.6f, 0.0f,
		/*32 Hole_RT*/  0.1f, 0.3f, 0.5f,   0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.6f, 0.3f,
		/*33 Hole_LT*/ -0.1f, 0.3f, 0.5f,   0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.4f, 0.3f,
		/*34 Aux_L*/   -0.5f, 0.3f, 0.5f,   0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.3f,
		/*35 Aux_R*/    0.5f, 0.3f, 0.5f,   0.0f, 0.0f, -1.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.3f
    };

	// 索引保持不变
	outer_.getIndices() = {
	    // 背面
	    0, 1, 2,  0, 2, 3,
	    // 左面
	    8, 9,10,  8,10,11,
	    // 右面特征
	    15, 27, 28, 15, 28, 12,
	    12, 28, 29, 12, 29, 13,
	    13, 29, 26, 13, 26, 14,
	    14, 26, 27, 14, 27, 15,
	    // 屋顶前面
	    16, 17, 18,
	    // 屋顶后面
	    19, 20, 21,
	    // 顶面
	    22, 23, 24,  22, 24, 25,

	    // 正面墙带门洞
	    4, 30, 33,
	    4, 33, 34,
	    31, 5, 35,
	    31, 35, 32,
	    34, 35, 6,
	    34, 6, 7
	};

	inner_.getIndices() = {
		// 背面
		0, 1, 2,  0, 2, 3,
		// 左面
		8, 9,10,  8,10,11,
		// 右面特征
		15, 27, 28, 15, 28, 12,
		12, 28, 29, 12, 29, 13,
		13, 29, 26, 13, 26, 14,
		14, 26, 27, 14, 27, 15,
		// 屋顶前面
		16, 17, 18,
		// 屋顶后面
		19, 20, 21,
		// 顶面
		22, 23, 24,  22, 24, 25,

		// 正面墙带门洞
		4, 30, 33,
		4, 33, 34,
		31, 5, 35,
		31, 35, 32,
		34, 35, 6,
		34, 6, 7
	};

    outer_.getTexturePath() = "../../media/textures/wall.jpg";
	inner_.getTexturePath() = "../../media/textures/wall.jpg";
} 

void Wall::setup() {
    outer_.setup();
	inner_.setup();
}


void Wall::draw(Shader& shader, const glm::mat4& modelMatrix, bool useTexture) const {
    shader.setVec3("material.ka", ka_);
    shader.setVec3("material.kd", kd_);
    shader.setVec3("material.ks", ks_);
    shader.setFloat("material.ns", ns_);
    outer_.draw(shader, modelMatrix, useTexture);
	inner_.draw(shader, glm::scale(modelMatrix, glm::vec3(0.99f, 0.99f, 0.99f)),  useTexture);
}